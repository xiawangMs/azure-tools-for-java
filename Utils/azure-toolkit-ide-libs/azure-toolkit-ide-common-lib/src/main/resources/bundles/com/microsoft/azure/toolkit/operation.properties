common.init_plugin=init plugin
common.load_plugin_settings=load local settings for plugin
common.provide_feedback=provide feedback
common.survey_browse=browse in feedback view
common.complete_feedback=complete feedback
connector.load_resource_connections=load resource connections
connector.persist_resource_connections=persist resource connections
connector.setup_connection_for_configuration=setup resource connection(s) for run configuration
connector.update_connection_task=update resource connections for run configuration
container.create_registry_properties_editor=create properties editor for Azure Container Registry
function.create_function_class=create function class
arm.create_deployment_properties_editor=create properties editor for Azure Resource Deployment
webapp.create_slot_properties_editor=create properties editor for Azure Web App deployment slot
function.create_app_properties_editor=create properties editor for function app
function.setup_run_configuration=setup run configuration for Azure Functions
function.detect_function_method=detect Azure Functions method in classes
function.create_function_module=create Azure Functions module
function.setup_function_root_module=set up root module for Azure Functions project
common.suppress_action=suppress action
connector.connect_from_project_open_dialog=connect Azure resources from project
mysql.create_server_properties_editor=create properties editor for Azure Database for MySQL
postgre.create_server_properties_editor=create properties editor for Azure Database for PostgreSQL
redis.create_explorer_editor=create data explorer for Azure Cache for Redis
redis.create_properties_editor=create properties editor for Azure Cache for Redis
connector.open_explorer=open Azure Resource Connector explorer
connector.persist_connection_resources=persist connected resources
connector.load_connection_resources=load connection resources
arm.create_deployment_editor=create properties editor for Azure Resource deployment
springcloud.create_app_properties_editor=create properties editor for Azure Spring App
connector.insert_spring_properties=insert Spring properties for resource connection
connector.navigate_from_line_marker=navigate to properties editor
connector.detect_connections=detect resource connections from project
sqlserver.create_server_properties_editor=create properties editor for SQL server
webapp.create_app_properties_editor=create properties editor for Azure Web App

account.try_azure=Try Azure for free
account.authenticate=sign in
account.select_subs=select subscriptions
kubernetes.kubu_config_admin=Download kubernetes admin config
kubernetes.kubu_config_user=Download kubernetes user config
kubernetes.get_credential_admin=Get admin credentials for a managed Kubernetes cluster and merge into .kube/config
kubernetes.get_credential_user=Get access credentials for a managed Kubernetes cluster and merge into .kube/config
acr.push_image=push image to selected Azure Container Registry
appservice.download_file=download selected file
appservice.open_in_browser=access selected app in local browser
appservice.refresh_directory=refresh selected file directory
appservice.start_stream_log=open streaming logs of selected app
appservice.stop_stream_log=close streaming logs of selected app
appservice.view_file=open selected file
arm.edit_deployment=edit selected ARM deployment
arm.export_parameter=export parameters of selected ARM deployment template
arm.export_template=export template of selected ARM deployment
arm.open_in_editor=open downloaded file in editor
arm.reveal_in_explorer=reveal file in File Explorer
arm.update_deployment=update selected ARM deployment
AzureToolkit.AzureSDK.DeprecatedNotification.NeverShowAgain=configure to never show Azure SDK deprecation warning again
AzureToolkit.OpenSdkReferenceBook=open Azure SDK Reference Book
common.open_azure_settings=open settings
common.open_azure_explorer=open Azure Explorer
common.open_azure_reference_book=open in Azure SDK Reference Book
common.highlight_resource_in_explorer=highlight resource in Azure Explorer
common.open_url=open URL
common.open_whats_new=open `What's New` document
common.open_whats_new_in_browser=open `What's New` document in local browser
common.requireAuth=authenticate before perform action
common.retry=retry the failed action
connector.add_connection=add new resource connection
connector.edit_connection=edit selected resource connection
connector.refresh_connections=refresh all resource connections
connector.remove_connection=remove selected resource connection
database.try_ultimate=try IntelliJ Ultimate Edition
function.config_core_tools=configure Azure Functions Core Tools in IDE
function.download_core_tools=download and install the Azure Functions Core Tools
function.refresh_functions=refresh functions of selected function app
function.reopen_creation_dialog=reopen Function App creation dialog
function.retry_with_free_port=retry with free port
function.trigger_function_with_http_client=trigger Function of selected function app from native Http Client
function.trigger_function=trigger selected function
function.trigger_in_browser=trigger Function of selected function app from local browser
group.create_arm_deployment=open ARM Deployment creation dialog with selected resource group
group.create_function=open Function App creation dialog with selected resource group
group.create_mysql_server=open Azure Database for MySQL single server creation dialog with selected resource group
group.create_postgre_server=open Azure Database for Postgre single server creation dialog with selected resource group
group.create_redis=open Redis cache creation dialog with selected resource group
group.create_spring_cluster=open Azure Spring Apps creation page in Azure Portal
group.create_sqlserver=open Azure SqlServer creation dialog with selected resource group
group.create_storage_account=open Azure Storage Account creation dialog with selected resource group
group.create_vm=open Virtual Machine creation dialog with selected resource group
group.create_webapp=open Azure Web App creation dialog with selected resource group
mysql.open_database_tool=open selected MySQL server with native DB Tools
postgre.open_database_tool=open selected PostgreSQL server with native DB Tools
redis.open_explorer=open Redis Explorer of selected Redis cache.
resource.connect=configure local project to consume Azure resources
resource.create=open resource creation dialog of selected resource type
resource.delete=delete selected resource
resource.deploy=open deployment dialog for selected resource
resource.open_portal_url=open configuration page of selected resource in Azure Portal
resource.pin=mark/unmark selected resource as favorite
resource.refresh=refresh selected resource
resource.restart=restart selected resource
resource.show_properties=open properties editor of selected resource
resource.start=start selected resource
resource.stop=stop selected resource
resource.unpin_all=unmark all as favorite
springcloud.open_public_url=access public URL of selected Azure Spring App
springcloud.open_test_url=access test URL of selected Azure Spring App
springcloud.reopen_deploy_dialog=reopen Azure Spring App deployment dialog
springcloud.stream_log=open streaming logs of selected Azure Spring App
springcloud.enable_remote_debugging=enable remote debugging of selected Azure Spring App
springcloud.disable_remote_debugging=disable remote debugging of selected Azure Spring App
springcloud.open_port_forwarding=open port forwarding of selected Azure Spring App
springcloud.close_port_forwarding=close port forwarding of selected Azure Spring App
sqlserver.open_database_tool=open selected Azure SQL Server with native DB Tools
storage.config_explorer_path=configure path of local Azure Storage Explorer
storage.copy_connection_string=copy connection string of selected Storage account
storage.copy_primary_key=copy primary key of selected Storage account
storage.download_explorer=download Azure Storage Explorer
storage.open_azure_storage_explorer=open selected Storage account in local Azure Storage Explorer
storage.open_portal_storage_browser=open selected Storage account's storage browser in Azure Portal
vm.add_ssh_configuration=add SSH configuration for selected Azure Virtual Machine
vm.connect_ssh=use OpenSSH to connect to your Factory OS test devices and VMs and run commands or transfer files
vm.browse_files_sftp=browse files of selected Azure Virtual Machine using sftp
vm.open_ssh_configuration=open SSH configuration
vm.reopen_creation_dialog=reopen VM creation dialog
vm.open_create_run_target_dialog=create new Run Target from Azure Virtual Machine
vm.create_environment_request=create environment request to Azure Virutal Machine
webapp.flight_record=start Flight Record of selected Azure Web App
webapp.refresh_deployment_slots=refresh deployment slots of selected Azure Web App
webapp.reopen_creation_dialog=reopen Azure Web App creation dialog
webapp.ssh=ssh into selected Azure Web App
webapp.swap_deployment_slot=swat deployment slot of selected Azure Web App

#########################Below properties came from azure-toolkit-libs##########################
service.refresh.service=refresh Azure Module({0})
resource.refresh.resource=refresh ({0})
group.create.rg=create resource group ({0})
mysql.create_server.server=create MySQL server({0})
mysql.start_server.server=start MySQL server({0})
mysql.stop_server.server=stop MySQL server({0})
mysql.restart_server.server=restart MySQL server({0})
mysql.delete_server.server=delete MySQL server({0})
mysql.add_special_firewall_rules.server=add firewall rules for MySQL server ({0})
postgre.create_server.server=create Postgre server({0})
postgre.restart_server.server=restart Postgre server({0})
postgre.delete_server.server=delete Postgre server({0})
postgre.list_servers.subscription=list PostgreSQL servers of subscription({0})
postgre.get_server.server|rg=get PostgreSQL server({0}) in resource group({1})
postgre.add_special_firewall_rules.server=add firewall rules for PostgreSQL server ({0})
sqlserver.create_server.server=create SQL server({0})
sqlserver.delete_server.server=delete SQL server({0})
sqlserver.add_special_firewall_rules.server=add firewall rules for SQL server ({0})
storage.create_account.account=creating Storage account({0})
storage.delete_account.account=delete Storage account({0})
storage.get_connection_string.account=get connection string of Storage account({0})
storage.get_key.account=get key of Storage account({0})
redis.create_redis.redis=create Redis cache({0})
redis.delete_redis.redis=delete Redis cache({0})
redis.list_reids=list Redis caches of selected subscriptions
redis.check_name.redis=check name availability for Redis cache({0})
redis.get_redis.redis=get Redis cache({0})
redis.get_jedis_pool.redis=get Redis client pool of Redis cache({0})
springcloud.load_cluster.cluster=load Spring Apps({0}) from Azure
springcloud.get_cluster.cluster=get Spring Apps({0}) by name
springcloud.list_clusters.subscription=list Spring Apps of subscription({0})
springcloud.list_clusters=list Spring Apps of selected subscriptions
springcloud.refresh_status.deployment=refresh status of Spring App deployment({0}) from Azure
springcloud.get_app.app=get Spring App({0}) from Azure
springcloud.list_apps.cluster=list apps of Spring Apps({0})
springcloud.load_app.app=load Spring App({0}) from Azure
springcloud.create_app.app=create Spring App({0})
springcloud.update_app.app=update Spring App({0})
springcloud.start_app.app=start Spring App({0})
springcloud.stop_app.app=stop Spring App({0})
springcloud.restart_app.app=restart Spring App({0})
springcloud.remove_app.app=remove Spring App({0})
springcloud.create_update_app=create or update Spring App from config in Mojo
springcloud.create_update_app.app=create or update Spring App({0}) from config
springcloud.load_deployment.deployment|app=load deployment({0}) of Spring App({1}) from Azure
springcloud.start_deployment.deployment=start deployment({0})
springcloud.stop_deployment.deployment=stop deployment({0})
springcloud.restart_deployment.deployment=restart deployment({0})
springcloud.scale_deployment.deployment=scale deployment({0})
springcloud.update_deployment.deployment=update deployment({0})
springcloud.create_deployment.deployment=create deployment({0})
springcloud.get_deployment.deployment=get deployment({0}) from Azure
springcloud.list_deployments.app=list deployments of Spring App({0})
springcloud.wait_until_deployment_ready.deployment|app=wait deployment({0}) of Spring App({1}) to be ready
springcloud.get_client.subscription=get Azure Spring Apps rest client of subscription({0})
appservice.get_plan.plan|rg=get Azure App Service plan({0}) in resource group({1})
appservice.list_plans.subscription=list Azure App Service plans of subscription({0})
appservice.list_plans.rg=list Azure App Service plans of resource group({0})
appservice.get_deployment.id=get Azure App Service deployment slot by id({0})
appservice.get_client.subscription=get Azure App Service rest client of subscription({0})
appservice.create_update_plan.plan=create or update Azure App Service plan ({0}) from config
functionapp.get_app.app|rg=get function app({0}) in resource group{(1)}
functionapp.list_apps.subscription=list function apps of subscription({0})
functionapp.deploy_app=deploy to Function App with resource creation or updating
webapp.create_update_app.app=create or update Azure Web App ({0}) from config
webapp.deploy_app.app=deploy to Azure Web App({0}) with resource creation or updating
webapp.get_app.app=get Azure Web App({0})
webapp.get_app.app|rg=get Azure Web App({0}) in resource group({1})
webapp.list_apps.subscription=list Azure Web Apps of subscription({0})
webapp.list_runtimes.os|version=list available Azure Web App runtimes with os({0}) and java version({1})
webapp.deploy_app=deploy to Azure Web App with resource creation or updating
webapp.create_app.app=create Azure Web App ({0}) from config
webapp.update_app.app=update Azure Web App ({0}) from config
#########################Above properties came from azure-toolkit-libs##########################
account.sign_in=sign in to Azure
account.sign_out=sign out from Azure
account.login.type=login with {0}
account.load_auth_config_cache=load auth settings from file system
account.cache_auth_config=persist auth settings to file system
account.update_auth_setting=update auth settings
account.get_subscription_detail=load details of all selected subscriptions
account.get_subscription_detail.subscription=load details of subscription({0})
account.get_subscription_details=get details of all cached subscriptions
account.list_subscriptions=list selected subscriptions
account.list_tenant_subscriptions=load subscriptions from authorized tenants
account.list_subscriptions.tenant=get all subscriptions of tenant({0})
account.load_all_subscriptions=load all available subscriptions from Azure
account.load_subscription_cache=reload subscriptions cache from file system
account.persist_subscription=persist subscriptions cache to file system
account.refresh_subscriptions=reload subscriptions
account.select_subscription=select one/more subscriptions
account.auth_tenant.tenant=authenticate tenant({0})
account.list_tenants.authorized=get all authorized tenants
account.authorize_action=authorize
account.restore_credential=restore credential on startup
account.try_aure=Try Azure for Free
ai.create_ai.ai|rg=create Application Insights({0}) in resource group({1})
ai.list_ais.subscription=list Application Insights of subscription({0})
appservice.download_file.file=download file({0}) to local
appservice.list_files.app=reload log/files of web/function app({0})
appservice.open_file.file=open file({0}) in editor
appservice.refresh_file.file=refresh file({0})
appservice.save_file.file=save file({0}) to azure
appservice.list_flight_recorders.app=list flight recorders of app({0})
appservice.profile_flight_recorder=profile flight recorder
appservice.close_log_stream.app=close streaming logs of app({0})
appservice.open_log_stream.app=open streaming logs of app({0})
appservice.list_plans.subscription|region|os=load app service plans of subscription({0})/region({1})/os({2})
appservice.list_regions.tier|subscription=get available regions with pricing tier({0}) of subscription({1})
appservice.download_jfr.file|app=download JFR file {0} from {1}
arm.delete_deployment.deployment=delete azure resource(deployment:{0})
arm.create_deployment.deployment=create azure resource deployment {0}
arm.list_deployments.rg|subscription=list all deployments of resource group({0}) in subscription({1})
arm.list_deployments=list all deployments of selected subscriptions
arm.list_deployments.subscription=list all deployments of subscription({0})
arm.update_deployment.deployment=update azure resource(deployment {0})
arm.edit_deployment.deployment=edit template of Azure resource deployment ({0})
arm.export_template.deployment=export template of Azure resource deployment ({0})
arm.export_parameter.deployment=export template parameters of Azure resource deployment ({0})
arm.open_template_view.deployment=open template editor view of Azure resource deployment ({0})
arm.create_deployment_ui.rg=open creation dialog to create deployment in resource group({0})
arm.update_deployment_ui.deployment=open update dialog to update Azure resource deployment ({0})
arm.delete_resource_group.rg=delete resource group({0})
arm.get_resource_group.rg|subscription=load details of resource group({0}) in subscription({1})
arm.list_resource_groups=list resource groups of selected subscription
arm.list_resource_groups.subscription=list resource groups of subscription({0})
arm.open_portal.rg=open configuration page of resource group({0}) in portal
blob.create_container.container=create blob container({0})
blob.delete_blob.blob=delete blob({0})
blob.download_blob.file|container=download blob into file({0}) from container({1})
blob.list_blobs.container=load blobs of container({0})
blob.upload_blob.file|container=upload blob file({0}) to blob container({1})
common.list_tiers=list all available pricing tiers
common.load_whatsnew=load embeded what's new document
common.open_portal.resource=open setting page of resource({0}) in portal
common.show_properties.deployment=show properties of deployment({0})
common.validate_func_project.project=check if project({0}) is a valid function project
common.get_artifact_file.artifact=get target file of artifact({0})
common.get_artifact_module.artifact=get module from artifact({0})
common.list_artifacts.project=list supported artifacts of project({0})
common.list_artifacts=list supported artifacts of current project
common.zip_artifact_files.file=archive artifacts into ({0}) for deployment
common.load_combobox_items.type=load/refresh {0} items in combo box
common.initialize_explorer=initialize Azure explorer
common.open_explorer=open Azure explorer
common.refresh_explorer=refresh Azure explorer
common.load_node_children.node=load content of node({0})
common.list_regions.subscription=load available regions of subscription({0})
common.create_rest_client.sub=create rest client for general Azure services in subscription({0})
common.copy=copy content to system clipboard
common.serialize_json=serialize content to json
common.deserialize_json=deserialize from json
common.load_settings=load persisted settings
common.save_settings=persist settings
common.persist=write data into local file
common.load_children.node=load children of node {0}
common.refresh_view.node=refresh node {0}
resource.refresh_on_subscription_changed.type=refresh {0}s on subscription changed
resource.preload.type=preload {0}s
resource.preload=preload resources
resource.connect_resource.resource=connect to resource ({0})
resource.create_resource=create resource
resource.check_name.resource=check availability of name ({0})
resource.delete_resource.resource=delete ({0})
resource.deploy_resource.resource=deploy artifacts to ({0})
resource.open_url.url=open ({0}) in browser
resource.open_portal_url.resource=open ({0}) in Azure Portal
resource.restart_resource.resource=restart ({0})
resource.show_properties.resource=show properties view of ({0})
resource.start_resource.resource=start ({0})
resource.stop_resource.resource=stop ({0})
resource.list_resources.type=list ({0})s
resource.load_resource.resource|type=load {1} ({0})
resource.delete_resource.resource|type=delete {1} ({0})
resource.create_resource.resource|type=create {1} ({0})
resource.update_resource.resource|type=update {1} ({0})
resource.draft_for_create.resource|type=initialize draft to create {1} ({0})
resource.draft_for_update.resource|type=initialize draft to update {1} ({0})
resource.reload.resource|type=reload {1} ({0}) from Azure
resource.reload_status.resource|type=refresh status of {1} ({0})
resource.list_supported_regions.type=list supported regions of resource type ({0})
resource.get.id=get resource by id ({0])
resource.create_resource.type=create {0}
aad.select_subscription=select subscription
aad.create_application=creating Azure AD application
aad.register_application=show ui to register a new Azure AD application
aad.show_application_template=show code templates for newly create Azure AD application
aad.show_application_templates=show code templates for Azure AD applications
connector.initialize_explorer=initialize Azure Resource Connector tool window
connector.show_properties.explorer=show properties of connected Azure resource
connector.prepare_before_run=connect Azure resource before run configuration
connector.update_database_password.database=update password of database ({0})
container.open_portal.container=open registered container({0}) in portal
container.show_properties.container=show properties of registered container({0})
docker.add_docker_support=add docker support within run/debug configuration
docker.deploy_image=deploy docker image to web app
docker.ping_host.host=try connecting docker({0})
docker.start_app=start docker based web app within run/debug configuration
docker.build_image.image|dir|host=build docker image({0}) in directory({1}) on docker host({2})
docker.pull_image.image=pull docker image({0})
docker.push_image=push docker image to web app within run/debug configuration
docker.push_image.image|registry=push docker image({0}) to registry({1})
docker.update_image.app|image=update docker image of web app({0}) to ({1})
function.clean_staging_folder.folder=clean up staging folder({0})
function.complete_deployment.app=complete the deployment of function({0}) and refresh Azure Explorer
function.complete_run.func=complete running function({0})
function.copy_settings.settings|folder=copy local settings({0}) to staging folder({1})
function.create_app.app=create function app ({0})...
function.create_app=create function app
function.delete_app.app=delete function app({0})
function.deploy_app=deploy function app
function.get_version.func=get version of function({0})
function.import_app_settings=import app settings
function.launch_debugger=launch debugger for function
function.list_java_apps=list all java function apps with details in selected subscription(s)
function.list_function_methods.module=list all function methods in module({0}) by annotation
function.list_function_modules.project=list all function modules in project({0})
function.load_setting.app=load app settings of function app({0})
function.open_creation_dialog=open function app creation dialog
function.open_portal.app=open function({0}) in portal
function.prepare_staging_folder.folder|app=prepare staging folder({0}) for function({1})
function.prepare_staging_folder=prepare staging folder for function method
function.refresh_funcs=refresh functions in function app
function.list_apps=reload function apps
function.restart_app.app=restart function app({0})
function.run_app=run function app locally
function.show_properties.app=show properties of function({0})
function.start_app.app=start function app({0})
function.stop_app.app=stop function app({0})
function.list_app.app=reload function app({0})
function.validate_jre=validate version of local jre
function.validate_runtime=validate Azure Functions Core Tools
function.run_cli.folder=run function CLI command from staging folder({0})
function.trigger_func.trigger=trigger function({0})
function.trigger_func_in_browser.trigger=trigger function({0}) in browser
function.trigger_function_with_http_client.trigger=trigger function({0}) with http client
function.trigger_func=trigger function app
function.create_class.name|dir=create function class({0}) in directory({1})
function.save_connection_settings=save connection string to local settings
function.get_temp_staging_folder=get temp staging folder
function.create_manifest=create manifest for function jar
mysql.connect_server.server=connect to Azure MySQL server({0})
mysql.open_portal.server=open configuration page of MySQL server({0}) in portal
mysql.show_properties.server=show properties of MySQL server({0})
mysql.update_password=update password of MySQL instance
mysql.create_server.server|subscription=create Azure Database for MySQL({0}) in subscription({1})
mysql.list_versions=list Azure MySQL-supported versions
mysql.open_database_tools.server=open MySQL Server({0}) with "Database Tools and SQL" plugin
mysql.refresh_properties_view.server=refresh properties view of MySQL({0})
mysql.create_server.group=create MySQL server in resource group ({0})
postgre.connect_server.server=connect to Azure PostgreSQL server({0})
postgre.update_password=update password of PostgreSQL instance
postgre.open_database_tools.server=open PostgreSQL Server({0}) with "Database Tools and SQL" plugin
postgre.create_server.group=create PostgreSQL server in resource group ({0})
sqlserver.connect_server.server=connect to Azure SqlServer server({0})
sqlserver.create_server.group=create SQL server in resource group ({0})
redis.open_redis_explorer.redis=open Redis explorer of Redis instance({0})
redis.open_portal.redis=open configuration page of Redis instance({0}) in portal
redis.show_properties.redis=show properties of Redis instance({0})
redis.create_redis.group=create Redis instance in resource group({0})
sdk.load_java_libs_meta_data=load Azure SDK meta data
sdk.load_spring_libs_metadata=load Azure SpringBoot SDK meta data
sdk.load_whitelist_metadata=load Azure SDK allow list meta data
sdk.load_meta_data=load Azure SDK meta data from github
sdk.warn_deprecated_libs=warn on deprecated libs
sdk.open_reference_book=open Azure SDK Reference Book
sdk.show_lib_details.feature=show details of feature({0}) in Azure SDK list
springcloud.deploy_app=deploy Spring App
springcloud.deploy_app.app=deploy to Spring App({0})
springcloud.update_dependency.project=update Azure Spring Cloud dependencies for project({0})
springcloud.open_public_url.app=open public endpoint of Spring App({0}) in browser
springcloud.open_test_url.app=open test endpoint of Spring App({0}) in browser
springcloud.show_properties.app=show properties of Spring App({0})
springcloud.open_stream_log.app=open streaming logs of Spring App({0})
springcloud.enable_remote_debugging.app=enable remote debugging of Spring App({0})
springcloud.disable_remote_debugging.app=disable remote debugging of Spring App({0})
springcloud.open_port_forwarding.instance=open port forwarding of Spring App/instance({0})
springcloud.close_port_forwarding.instance=close port forwarding of Spring App/instance({0})
springcloud.close_log_stream.instance=close stream log for Spring App/instance({0})
springcloud.open_log_stream.instance=open stream log for Spring App/instance({0})
springcloud.start_log_stream.instance=start stream log for Spring App/instance({0})
springcloud.create_cluster.group=create Spring Apps in resource group({0})
sqlserver.open_database_tools.server=open SQL Server({0}) with "Database Tools and SQL" plugin
sqlserver.open_portal.server=open configuration page of SQL Server({0}) in portal
sqlserver.show_properties.server=show properties of SQL Server({0})
sqlserver.refresh_properties_view.server=refresh properties view of SQLServer({0})
storage.open_portal.account=open configuration page of Storage account({0}) in portal
storage.open_storage_explorer.account=open Storage Explorer of Storage account({0})
storage.open_azure_storage_explorer.account=open Azure Storage Explorer of Storage account({0})
storage.copy_connection_string.account=copy connection string of Storage account({0}) to clipboard
storage.copy_primary_key.account=copy primary key of Storage account({0}) to clipboard
storage.create_account.group=create Storage account in resource group({0})
acr.push_image.acr=push image to Azure Container Registry ({0})
vm.create_vm.vm=create virtual machine({0})
vm.delete_vm.vm=delete virtual machine({0})
vm.list_availability_sets=list all available availability sets
vm.list_public_ips=load all available public IP addresses
vm.list_security_groups=list all available network security groups
vm.list_sizes.region=list all VM sizes in region({0})
vm.list_storage_accounts=list all available Storage accounts
vm.list_virtual_networks=load all available virtual networks
vm.open_portal.vm=open configuration page of virtual machine({0}) in portal
vm.restart_vm.vm=restart virtual machine({0})
vm.start_vm.vm=start virtual machine({0})
vm.stop_vm.vm=stop virtual machine({0})
vm.list_images=load images
vm.list_offers.publisher=load offers in publisher({0})
vm.list_publishers=load publishers
vm.list_skus.offer=load skus in offer({0})
vm.add_ssh_config.vm=Add SSH config for ({0})
vm.connect_using_ssh.vm=Connect ({0}) using SSH
vm.connect_using_ssh_ultimate.vm=Connect ({0}) using SSH in Ultimate version
vm.connect_using_ssh_community.vm=Connect ({0}) using SSH in Community version
vm.browse_files_sftp.vm=Browse files of ({0}) using sftp
vm.connecting.vm=connect to ({0})
vm.open_ssh_config_dialog=Open "SSH Configurations" Dialog
vm.create_vm.group=create virtual machine in resource group ({0})
webapp.create_app.app|subscription|image=create web app({0}) in subscription({1}) with private registry image({2})
webapp.complete_deployment.app=complete the deployment of web app({0}) and refresh Azure Explorer
webapp.open_public_url.app=update local configuration and open URL of web app in local browser
webapp.delete_app.app=delete web app({0})
webapp.deploy_artifact.app=deploy artifact to web app ({0})
webapp.deploy_module.module=deploy module({0}) as Azure Web App
webapp.init_config=init web app configuration
webapp.open_browser=open web app in local browser
webapp.open_creation_dialog=open web app creation dialog
webapp.open_portal.app=open configuration page of web app({0}) in portal
webapp.reload_app=refresh content of web app
webapp.list_apps=reload web apps in selected subscription(s)
webapp.get_artifact.app=get the artifact to be deployed to web app({0})
webapp.upload_artifact.artifact|app=upload artifact({0}) to app({1})
webapp.create_deployment.app=create deployment slot for web app({0})
webapp.create_deployment.deployment|app=create deployment({0}) for web app({1})
webapp.delete_deployment.deployment|app=delete deployment slot({0}) of web app({1})
webapp.open_portal_deployment.deployment=open configuration page of deployment slot({0}) in portal
webapp.refresh_deployment.deployment|app=refresh deployment slot({0}) of web app({1})
webapp.list_deployments.app=refresh deployment slots of web app({0})
webapp.restart_deployment.deployment|app=restart deployment slot({0}) of web app({1})
webapp.start_deployment.deployment|app=start deployment slot({0}) of web app({1})
webapp.stop_deployment.deployment|app=stop deployment slot({0}) of web app({1})
webapp.swap_deployment.deployment|app=swap deployment slot({0}) of web app({1}) for production
webapp.update_deployment_settings.deployment|app=update settings of deployment slot({0}) of web app({1})
webapp.connect_ssh.app=connect to web app ({0})
webapp.profile_flight_recorder.app=profile web app ({0}) with flight recorder
webapp.open_ssh.app=Opening SSH - ({0}) session ...
webapp.create_app.group=create web app in resource group ({0})
applicationinsights.application_map=Show application map for Application Insights
applicationinsights.application_map.applicationinsights=Show application map for Application Insights ({0})
applicationinsights.live_metrics=Show live metrics for Application Insights
applicationinsights.live_metrics.applicationinsights=Show live metrics for Application Insights ({0})
applicationinsights.transaction_search=Open transaction search for Application Insights
applicationinsights.transaction_search.applicationinsights=Open transaction search for Application Insights ({0})
applicationinsights.create_applicationinsights.applicationinsights=creating Application Insights resource ({0})
group.create_applicationinsights=open Application Insights creation dialog with selected resource group
group.create_applicationinsights.group=create Application Insights in resource group ({0})
applicationinsights.instrumentation_key=copy instrumentation key
applicationinsights.instrumentation_key.applicationinsights=copy instrumentation key of Application Insights ({0})
applicationinsights.copy_connection_string=copy connection string
applicationinsights.copy_connection_string.applicationinsights=copy connection string of Application Insights ({0})
guidance.create_application_insights_resource_connection=create resource connection for Application Insights resource
guidance.create_application_insights=create Application Insights resource
guidance.open_live_metrics=open live metrics of Application Insights resource
guidance.create_function_app=create function app
guidance.create_webapp=create web app
guidance.deploy_function_app=deploy project to Azure Functions
guidance.deploy_webapp=deploy project to Azure Web App
guidance.open_in_browser=open resource in browser
guidance.open_log_streaming=open streaming logs for resource
guidance.trigger_function=trigger function
guidance.close_course=close course
guidance.focus_resource=focus resource in Azure explorer
guidance.clone=clone project to local
guidance.open_resource_in_azure=open resource in Azure
guidance.select_subscription=select subscription
guidance.sign_in=sign in
guidance.show_courses_view=open getting start courses
guidance.open_course.course=open course ({0})
guidance.execute_phase.phase=execute phase ({0})
guidance.execute_step.step=execute step ({0})
guidance.execute_summary_step.step=execute step ({0})
guidance.execute_task.step=execute task of step ({0})
kubernetes.kubu_config_admin.kubernetes=download kubeconfig (admin) for Kubernetes service ({0})
kubernetes.kubu_config_user.kubernetes=download kubeconfig (user) for Kubernetes service ({0})
kubernetes.get_credential_admin.kubernetes=save credentials (admin) for Kubernetes service ({0}) and set as current cluster
kubernetes.get_credential_user.kubernetes=save credentials (user) for Kubernetes service ({0}) and set as current cluster
kubernetes.create_service.service=create Kubernetes service ({0})
kubernetes.open_kubernetes_plugin=open tool window of Kubernetes plugin
kubernetes.install_kubernetes_plugin=install Kubernetes plugin to connect Azure Kubernetes service
kubernetes.set_kube_config=set kubeconfig file for your project
group.create_kubernetes=open Azure Kubernetes service creation dialog with selected resource group
group.create_kubernetes.group=create Azure Kubernetes service in resource group ({0})
group.create_cosmos_db_account=open Azure Cosmos DB account creation dialog with selected resource group
group.create_cosmos_db_account.group=create Azure Cosmos DB account in resource group ({0})
cosmos.open_data_explorer.account=open Azure Cosmos DB Account ({0}) in data explorer on Azure Portal
cosmos.copy_connection_string.account=copy connection string of Azure Cosmos DB Account ({0})
cosmos.create_account.account=create Azure Cosmos DB Account ({0})
cosmos.create_database.database|account=create database ({0}) in account ({1})

cosmos.open_database_tools=open selected Azure Cosmos DB account with "Database Tools and SQL" plugin
cosmos.open_database_tools.account=open Azure Cosmos DB account ({0}) with "Database Tools and SQL" plugin
cosmos.signin_from_dbtools=sign in from "Database Tools and SQL" plugin
cosmos.create_account_from_dbtools=create a new Azure Cosmos DB account
cosmos.select_account_dbtools.account=select an existing Azure Cosmos DB account to create a new datasource
